Victoria Weaver
Applied Programming
Fall 2015
HW7 Analysis

To determine the correction equation, the analog values generated by GenTestData.c.  The analog values were used to determined both the digital values generated by the device and the values that would be generated by an ideal device (ideal digital values).  The values from the device were generated by piping the analog values to the Device executable provided.  The outputs were redirected to an external textfile.  The ideal values were generated by using a linear equation (y = mx + b) and finding the slope and setting the intercept to 0.  The analog values that can be measured by the device fall within the range [0V, 5V] and output values from [0, 4095] (given).  If the device is ideal, the analog and digital values follow a linear relationship with an intercept at y = 0 and a slope given by m = (y1-y0)/(x1-x0). Using the end points of the given digital and analog ranges, the equation yields a slope of 819.  Thus, the device follows and ideal linear relationship of y = 819x.

Using this equation in conjunction with the analog values generated by GenTestData, the ideal digital values were generated and redirected to an external textfile.  To generate the correction equation, the device values (y-axis) were plotted against the ideal values (x-axis) in Excel.  Excel was used to generate a trendline.  The device values were run through the correction equation to get the corrected values.  The program DetermineError.c was used to calculate the maximum percent error.  

In order to get the maximum percent error below 5%, the trendline needed to be adjusted.  At first a linear trendline was used as the correction equation, but the error yielded was still too high (~8%).  A second order polynomial was then chosen to describe the equation.  The error with the second order polynomial fell to ~6%.  A third order polynomial could have been chosen to generate a trendline, but a third order polynomial would likely be too complex to describe the data so the second order polynomial was used.  To get the error below 5%, the coefficients of the correction equation were manually adjusted.  As a result, the third coefficient in the polynomial (no variable) was the only coefficient adjusted, and was increased.  This brought the error down to ~4.3%, which is well below the required 5%.

To further confirm the "correctness" of the corrected values, the corrected data was plotted against the ideal data values.  If the data were corrected to 0% error, the plot would yield a slope of exactly 1.  After using plotdevice.c to plot the data, it is seen that the plot follows what is very close to a slope of 1.  There is slight curve, but that is to be expected because there remains approximatly 4% error left after correcting the values.
